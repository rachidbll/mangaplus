Sprint 1: Foundational Changes
1.  Asset Replacement: Replace all local asset paths with placeholders from a CDN to ensure the application is visually complete without relying on local files.
2.  Initial Content: Populate the application with random text and icons on first load to provide a functional baseline.
3.  Admin/User View Separation: Refactor the main application component to cleanly separate the user-facing manga reader from the admin dashboard.
4.  Site Update Notification: Implement a notification system to inform the administrator that they need to update the site information.

Sprint 2: Admin Panel & Website Configuration
1.  Dedicated Admin Section: Create a distinct, navigable section for the admin dashboard.
2.  Essential Settings UI: Develop a user-friendly interface within the admin dashboard for managing crucial website settings (e.g., title, description, logos).
3.  Dynamic Content Integration: Connect the settings UI to the frontend, allowing real-time updates to the user-facing pages.

Sprint 3: Data Integration & Content Population
1.  Anilist Data Enhancement: Augment the existing Anilist service to fetch a comprehensive set of manga details, including character information.
2.  Database Schema Update: Extend the Prisma database schema to accommodate the new data points.
3.  Dynamic Content Population: Populate the frontend components with the fetched Anilist data, replacing all placeholder content.
